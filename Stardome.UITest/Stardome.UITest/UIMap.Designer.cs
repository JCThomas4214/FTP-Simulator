// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Stardome.UITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// LoginFailure1 - Use 'LoginFailure1Params' to pass parameters into this method.
        /// </summary>
        public void LoginFailure1()
        {
            #region Variable Declarations
            HtmlHyperlink uIScarlettsdaughtermakHyperlink = this.UIMsnInternetExplorerWindow.UIMsnDocument.UIMainCustom.UIScarlettsdaughtermakHyperlink;
            HtmlImage uIBruceJennerisdevastaImage = this.UIMsnInternetExplorerWindow.UIMsnDocument.UIMainCustom.UIBruceJennerisdevastaImage;
            HtmlHyperlink uINewvideoshowsBruceJeHyperlink = this.UIMsnInternetExplorerWindow.UIMsnDocument.UIMainCustom.UINewvideoshowsBruceJeHyperlink;
            BrowserWindow uIMsnInternetExplorerWindow = this.UIMsnInternetExplorerWindow;
            HtmlHyperlink uILoginHyperlink = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginHyperlink;
            HtmlEdit uIUsernameEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UILoginButton;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Scarlett's daughter makes her debut and more cele...' link at (1, 1)
            Mouse.Hover(uIScarlettsdaughtermakHyperlink, new Point(1, 1));

            // Mouse hover 'Bruce Jenner is 'devastated' following fatal accid...' image at (1, 1)
            Mouse.Hover(uIBruceJennerisdevastaImage, new Point(1, 1));

            // Mouse hover 'New video shows Bruce Jenner may be at fault in f...' link at (1, 1)
            Mouse.Hover(uINewvideoshowsBruceJeHyperlink, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://localhost:2129/'
            uIMsnInternetExplorerWindow.NavigateToUrl(new System.Uri(this.LoginFailure1Params.UIMsnInternetExplorerWindowUrl));

            // Click 'Log in' link
            Mouse.Click(uILoginHyperlink, new Point(22, 10));

            // Type 'ab' in 'User name' text box
            uIUsernameEdit.Text = this.LoginFailure1Params.UIUsernameEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LoginFailure1Params.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(37, 22));
        }
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            HtmlInputButton uILoginButton = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UILoginButton;
            #endregion

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(30, 20));
        }
        
        /// <summary>
        /// LoginFailure - Use 'LoginFailureParams' to pass parameters into this method.
        /// </summary>
        public void LoginFailure()
        {
            #region Variable Declarations
            BrowserWindow uIMsnInternetExplorerWindow = this.UIMsnInternetExplorerWindow;
            HtmlHyperlink uILoginHyperlink = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginHyperlink;
            HtmlEdit uIUsernameEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UILoginButton;
            #endregion

            // Go to web page 'http://localhost:2129/'
            uIMsnInternetExplorerWindow.NavigateToUrl(new System.Uri(this.LoginFailureParams.UIMsnInternetExplorerWindowUrl));

            // Click 'Log in' link
            Mouse.Click(uILoginHyperlink, new Point(28, 12));

            // Type 'ab' in 'User name' text box
            uIUsernameEdit.Text = this.LoginFailureParams.UIUsernameEditText;

            // Type '{Tab}' in 'User name' text box
            Keyboard.SendKeys(uIUsernameEdit, this.LoginFailureParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LoginFailureParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(26, 21));
        }
        
        /// <summary>
        /// LoginFailureAssert - Use 'LoginFailureAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void LoginFailureAssert()
        {
            #region Variable Declarations
            HtmlCustom uITheusernameorpassworCustom = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UITheusernameorpassworCustom;
            #endregion

            // Verify that the 'TagName' property of 'The user name or password provided is in' custom control equals 'LI'
            Assert.AreEqual(this.LoginFailureAssertExpectedValues.UITheusernameorpassworCustomTagName, uITheusernameorpassworCustom.TagName, "The user name or password provided is incorrect.");
        }
        
        /// <summary>
        /// AdminLoginSuccess - Use 'AdminLoginSuccessParams' to pass parameters into this method.
        /// </summary>
        public void AdminLoginSuccess()
        {
            #region Variable Declarations
            BrowserWindow uILoginInternetExploreWindow1 = this.UILoginInternetExploreWindow1;
            HtmlEdit uIUsernameEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UILoginButton;
            #endregion

            // Go to web page 'http://localhost:2129/'
            uILoginInternetExploreWindow1.NavigateToUrl(new System.Uri(this.AdminLoginSuccessParams.UILoginInternetExploreWindow1Url));

            // Type 'ab' in 'User name' text box
            uIUsernameEdit.Text = this.AdminLoginSuccessParams.UIUsernameEditText;

            // Type '{Tab}' in 'User name' text box
            Keyboard.SendKeys(uIUsernameEdit, this.AdminLoginSuccessParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.AdminLoginSuccessParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(35, 18));
        }
        
        /// <summary>
        /// LoginAssert - Use 'LoginAssertExpectedValues' to pass parameters into this method.
        /// </summary>
        public void LoginAssert()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIHomePageInternetExplWindow.UIHomePageDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
            Assert.AreEqual(this.LoginAssertExpectedValues.UILogoffHyperlinkInnerText, uILogoffHyperlink.InnerText, "Login Failed");
        }
        
        /// <summary>
        /// LoginSuccess - Use 'LoginSuccessParams' to pass parameters into this method.
        /// </summary>
        public void LoginSuccess()
        {
            #region Variable Declarations
            BrowserWindow uIMsnInternetExplorerWindow = this.UIMsnInternetExplorerWindow;
            HtmlEdit uIUsernameEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UILoginButton;
            #endregion

            // Go to web page 'http://localhost:2129/'
            uIMsnInternetExplorerWindow.NavigateToUrl(new System.Uri(this.LoginSuccessParams.UIMsnInternetExplorerWindowUrl));

            // Type 'ab' in 'User name' text box
            uIUsernameEdit.Text = this.LoginSuccessParams.UIUsernameEditText;

            // Type '{Tab}' in 'User name' text box
            Keyboard.SendKeys(uIUsernameEdit, this.LoginSuccessParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.LoginSuccessParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(44, 14));
        }
        
        /// <summary>
        /// AssertLoginSuccess - Use 'AssertLoginSuccessExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertLoginSuccess()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIHomePageInternetExplWindow.UIHomePageDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
            Assert.AreEqual(this.AssertLoginSuccessExpectedValues.UILogoffHyperlinkInnerText, uILogoffHyperlink.InnerText, "Failed to Login");
        }
        
        /// <summary>
        /// LogOffAfterLogin
        /// </summary>
        public void LogOffAfterLogin()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIHomePageInternetExplWindow.UIHomePageDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Click 'Log off' link
            Mouse.Click(uILogoffHyperlink, new Point(31, 9));
        }
        
        /// <summary>
        /// ProducerLoginSuccess - Use 'ProducerLoginSuccessParams' to pass parameters into this method.
        /// </summary>
        public void ProducerLoginSuccess()
        {
            #region Variable Declarations
            BrowserWindow uIMsnInternetExplorerWindow = this.UIMsnInternetExplorerWindow;
            HtmlEdit uIUsernameEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UILoginButton;
            #endregion

            // Go to web page 'http://localhost:2129/'
            uIMsnInternetExplorerWindow.NavigateToUrl(new System.Uri(this.ProducerLoginSuccessParams.UIMsnInternetExplorerWindowUrl));

            // Type 'producer' in 'User name' text box
            uIUsernameEdit.Text = this.ProducerLoginSuccessParams.UIUsernameEditText;

            // Type '{Tab}' in 'User name' text box
            Keyboard.SendKeys(uIUsernameEdit, this.ProducerLoginSuccessParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.ProducerLoginSuccessParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(47, 13));
        }
        
        /// <summary>
        /// AssertProducerLoginSuccess - Use 'AssertProducerLoginSuccessExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertProducerLoginSuccess()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIIndexInternetExploreWindow.UIIndexDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
            Assert.AreEqual(this.AssertProducerLoginSuccessExpectedValues.UILogoffHyperlinkInnerText, uILogoffHyperlink.InnerText, "Producer Login Failed");
        }
        
        /// <summary>
        /// ProducerLogOff
        /// </summary>
        public void ProducerLogOff()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIIndexInternetExploreWindow.UIIndexDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Click 'Log off' link
            Mouse.Click(uILogoffHyperlink, new Point(32, 11));
        }
        
        /// <summary>
        /// ClientLoginSuccess - Use 'ClientLoginSuccessParams' to pass parameters into this method.
        /// </summary>
        public void ClientLoginSuccess()
        {
            #region Variable Declarations
            BrowserWindow uILoginInternetExploreWindow = this.UILoginInternetExploreWindow;
            HtmlEdit uIUsernameEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIUsernameEdit;
            HtmlEdit uIPasswordEdit = this.UIMsnInternetExplorerWindow.UILoginDocument.UIPasswordEdit;
            HtmlInputButton uILoginButton = this.UIMsnInternetExplorerWindow.UILoginDocument.UILoginFormCustom.UILoginButton;
            #endregion

            // Go to web page 'http://localhost:2129/'
            uILoginInternetExploreWindow.NavigateToUrl(new System.Uri(this.ClientLoginSuccessParams.UILoginInternetExploreWindowUrl));

            // Type 'client' in 'User name' text box
            uIUsernameEdit.Text = this.ClientLoginSuccessParams.UIUsernameEditText;

            // Type '{Tab}' in 'User name' text box
            Keyboard.SendKeys(uIUsernameEdit, this.ClientLoginSuccessParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.ClientLoginSuccessParams.UIPasswordEditPassword;

            // Click 'Log in' button
            Mouse.Click(uILoginButton, new Point(35, 7));
        }
        
        /// <summary>
        /// AssertClientLogin - Use 'AssertClientLoginExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertClientLogin()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIIndexInternetExploreWindow1.UIIndexDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
            Assert.AreEqual(this.AssertClientLoginExpectedValues.UILogoffHyperlinkInnerText, uILogoffHyperlink.InnerText, "Client Login Failure");
        }
        
        /// <summary>
        /// ClientLogOff
        /// </summary>
        public void ClientLogOff()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIIndexInternetExploreWindow1.UIIndexDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Click 'Log off' link
            Mouse.Click(uILogoffHyperlink, new Point(26, 7));
        }
        
        /// <summary>
        /// AssertAdminLogin - Use 'AssertAdminLoginExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertAdminLogin()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIHomePageInternetExplWindow.UIHomePageDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
            Assert.AreEqual(this.AssertAdminLoginExpectedValues.UILogoffHyperlinkInnerText, uILogoffHyperlink.InnerText, "Admin Login Fail");
        }
        
        /// <summary>
        /// AdminLogOff
        /// </summary>
        public void AdminLogOff()
        {
            #region Variable Declarations
            HtmlHyperlink uILogoffHyperlink = this.UIHomePageInternetExplWindow.UIHomePageDocument.UILogoutFormCustom.UILogoffHyperlink;
            #endregion

            // Click 'Log off' link
            Mouse.Click(uILogoffHyperlink, new Point(17, 8));
        }
        
        #region Properties
        public virtual LoginFailure1Params LoginFailure1Params
        {
            get
            {
                if ((this.mLoginFailure1Params == null))
                {
                    this.mLoginFailure1Params = new LoginFailure1Params();
                }
                return this.mLoginFailure1Params;
            }
        }
        
        public virtual LoginFailureParams LoginFailureParams
        {
            get
            {
                if ((this.mLoginFailureParams == null))
                {
                    this.mLoginFailureParams = new LoginFailureParams();
                }
                return this.mLoginFailureParams;
            }
        }
        
        public virtual LoginFailureAssertExpectedValues LoginFailureAssertExpectedValues
        {
            get
            {
                if ((this.mLoginFailureAssertExpectedValues == null))
                {
                    this.mLoginFailureAssertExpectedValues = new LoginFailureAssertExpectedValues();
                }
                return this.mLoginFailureAssertExpectedValues;
            }
        }
        
        public virtual AdminLoginSuccessParams AdminLoginSuccessParams
        {
            get
            {
                if ((this.mAdminLoginSuccessParams == null))
                {
                    this.mAdminLoginSuccessParams = new AdminLoginSuccessParams();
                }
                return this.mAdminLoginSuccessParams;
            }
        }
        
        public virtual LoginAssertExpectedValues LoginAssertExpectedValues
        {
            get
            {
                if ((this.mLoginAssertExpectedValues == null))
                {
                    this.mLoginAssertExpectedValues = new LoginAssertExpectedValues();
                }
                return this.mLoginAssertExpectedValues;
            }
        }
        
        public virtual LoginSuccessParams LoginSuccessParams
        {
            get
            {
                if ((this.mLoginSuccessParams == null))
                {
                    this.mLoginSuccessParams = new LoginSuccessParams();
                }
                return this.mLoginSuccessParams;
            }
        }
        
        public virtual AssertLoginSuccessExpectedValues AssertLoginSuccessExpectedValues
        {
            get
            {
                if ((this.mAssertLoginSuccessExpectedValues == null))
                {
                    this.mAssertLoginSuccessExpectedValues = new AssertLoginSuccessExpectedValues();
                }
                return this.mAssertLoginSuccessExpectedValues;
            }
        }
        
        public virtual ProducerLoginSuccessParams ProducerLoginSuccessParams
        {
            get
            {
                if ((this.mProducerLoginSuccessParams == null))
                {
                    this.mProducerLoginSuccessParams = new ProducerLoginSuccessParams();
                }
                return this.mProducerLoginSuccessParams;
            }
        }
        
        public virtual AssertProducerLoginSuccessExpectedValues AssertProducerLoginSuccessExpectedValues
        {
            get
            {
                if ((this.mAssertProducerLoginSuccessExpectedValues == null))
                {
                    this.mAssertProducerLoginSuccessExpectedValues = new AssertProducerLoginSuccessExpectedValues();
                }
                return this.mAssertProducerLoginSuccessExpectedValues;
            }
        }
        
        public virtual ClientLoginSuccessParams ClientLoginSuccessParams
        {
            get
            {
                if ((this.mClientLoginSuccessParams == null))
                {
                    this.mClientLoginSuccessParams = new ClientLoginSuccessParams();
                }
                return this.mClientLoginSuccessParams;
            }
        }
        
        public virtual AssertClientLoginExpectedValues AssertClientLoginExpectedValues
        {
            get
            {
                if ((this.mAssertClientLoginExpectedValues == null))
                {
                    this.mAssertClientLoginExpectedValues = new AssertClientLoginExpectedValues();
                }
                return this.mAssertClientLoginExpectedValues;
            }
        }
        
        public virtual AssertAdminLoginExpectedValues AssertAdminLoginExpectedValues
        {
            get
            {
                if ((this.mAssertAdminLoginExpectedValues == null))
                {
                    this.mAssertAdminLoginExpectedValues = new AssertAdminLoginExpectedValues();
                }
                return this.mAssertAdminLoginExpectedValues;
            }
        }
        
        public UIMsnInternetExplorerWindow UIMsnInternetExplorerWindow
        {
            get
            {
                if ((this.mUIMsnInternetExplorerWindow == null))
                {
                    this.mUIMsnInternetExplorerWindow = new UIMsnInternetExplorerWindow();
                }
                return this.mUIMsnInternetExplorerWindow;
            }
        }
        
        public UIHomePageInternetExplWindow UIHomePageInternetExplWindow
        {
            get
            {
                if ((this.mUIHomePageInternetExplWindow == null))
                {
                    this.mUIHomePageInternetExplWindow = new UIHomePageInternetExplWindow();
                }
                return this.mUIHomePageInternetExplWindow;
            }
        }
        
        public UIIndexInternetExploreWindow UIIndexInternetExploreWindow
        {
            get
            {
                if ((this.mUIIndexInternetExploreWindow == null))
                {
                    this.mUIIndexInternetExploreWindow = new UIIndexInternetExploreWindow();
                }
                return this.mUIIndexInternetExploreWindow;
            }
        }
        
        public UILoginInternetExploreWindow UILoginInternetExploreWindow
        {
            get
            {
                if ((this.mUILoginInternetExploreWindow == null))
                {
                    this.mUILoginInternetExploreWindow = new UILoginInternetExploreWindow();
                }
                return this.mUILoginInternetExploreWindow;
            }
        }
        
        public UIIndexInternetExploreWindow1 UIIndexInternetExploreWindow1
        {
            get
            {
                if ((this.mUIIndexInternetExploreWindow1 == null))
                {
                    this.mUIIndexInternetExploreWindow1 = new UIIndexInternetExploreWindow1();
                }
                return this.mUIIndexInternetExploreWindow1;
            }
        }
        
        public UILoginInternetExploreWindow1 UILoginInternetExploreWindow1
        {
            get
            {
                if ((this.mUILoginInternetExploreWindow1 == null))
                {
                    this.mUILoginInternetExploreWindow1 = new UILoginInternetExploreWindow1();
                }
                return this.mUILoginInternetExploreWindow1;
            }
        }
        #endregion
        
        #region Fields
        private LoginFailure1Params mLoginFailure1Params;
        
        private LoginFailureParams mLoginFailureParams;
        
        private LoginFailureAssertExpectedValues mLoginFailureAssertExpectedValues;
        
        private AdminLoginSuccessParams mAdminLoginSuccessParams;
        
        private LoginAssertExpectedValues mLoginAssertExpectedValues;
        
        private LoginSuccessParams mLoginSuccessParams;
        
        private AssertLoginSuccessExpectedValues mAssertLoginSuccessExpectedValues;
        
        private ProducerLoginSuccessParams mProducerLoginSuccessParams;
        
        private AssertProducerLoginSuccessExpectedValues mAssertProducerLoginSuccessExpectedValues;
        
        private ClientLoginSuccessParams mClientLoginSuccessParams;
        
        private AssertClientLoginExpectedValues mAssertClientLoginExpectedValues;
        
        private AssertAdminLoginExpectedValues mAssertAdminLoginExpectedValues;
        
        private UIMsnInternetExplorerWindow mUIMsnInternetExplorerWindow;
        
        private UIHomePageInternetExplWindow mUIHomePageInternetExplWindow;
        
        private UIIndexInternetExploreWindow mUIIndexInternetExploreWindow;
        
        private UILoginInternetExploreWindow mUILoginInternetExploreWindow;
        
        private UIIndexInternetExploreWindow1 mUIIndexInternetExploreWindow1;
        
        private UILoginInternetExploreWindow1 mUILoginInternetExploreWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginFailure1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LoginFailure1Params
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:2129/'
        /// </summary>
        public string UIMsnInternetExplorerWindowUrl = "http://localhost:2129/";
        
        /// <summary>
        /// Type 'ab' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "ab";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "+qUTaefO8fRWnJYzb/wnJH5uwOKVQ1J8";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginFailure'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LoginFailureParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:2129/'
        /// </summary>
        public string UIMsnInternetExplorerWindowUrl = "http://localhost:2129/";
        
        /// <summary>
        /// Type 'ab' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "ab";
        
        /// <summary>
        /// Type '{Tab}' in 'User name' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "ycUhFwSm1VMlhHwbjt3WBO0kbpageHHu";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginFailureAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LoginFailureAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'TagName' property of 'The user name or password provided is in' custom control equals 'LI'
        /// </summary>
        public string UITheusernameorpassworCustomTagName = "LI";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AdminLoginSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AdminLoginSuccessParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:2129/'
        /// </summary>
        public string UILoginInternetExploreWindow1Url = "http://localhost:2129/";
        
        /// <summary>
        /// Type 'ab' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "ab";
        
        /// <summary>
        /// Type '{Tab}' in 'User name' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "QWwOodIXpSM441BCNCWNvH9k+8fhegdI";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginAssert'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LoginAssertExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
        /// </summary>
        public string UILogoffHyperlinkInnerText = "Log off";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LoginSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class LoginSuccessParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:2129/'
        /// </summary>
        public string UIMsnInternetExplorerWindowUrl = "http://localhost:2129/";
        
        /// <summary>
        /// Type 'ab' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "ab";
        
        /// <summary>
        /// Type '{Tab}' in 'User name' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "QWwOodIXpSM441BCNCWNvH9k+8fhegdI";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertLoginSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertLoginSuccessExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
        /// </summary>
        public string UILogoffHyperlinkInnerText = "Log off";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ProducerLoginSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ProducerLoginSuccessParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:2129/'
        /// </summary>
        public string UIMsnInternetExplorerWindowUrl = "http://localhost:2129/";
        
        /// <summary>
        /// Type 'producer' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "producer";
        
        /// <summary>
        /// Type '{Tab}' in 'User name' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "MTnqGLWWNjOWwjF8wGxtdQhZ43ocezNy";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertProducerLoginSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertProducerLoginSuccessExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
        /// </summary>
        public string UILogoffHyperlinkInnerText = "Log off";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClientLoginSuccess'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class ClientLoginSuccessParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:2129/'
        /// </summary>
        public string UILoginInternetExploreWindowUrl = "http://localhost:2129/";
        
        /// <summary>
        /// Type 'client' in 'User name' text box
        /// </summary>
        public string UIUsernameEditText = "client";
        
        /// <summary>
        /// Type '{Tab}' in 'User name' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "MTnqGLWWNjOWwjF8wGxtdQhZ43ocezNy";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertClientLogin'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertClientLoginExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
        /// </summary>
        public string UILogoffHyperlinkInnerText = "Log off";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertAdminLogin'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class AssertAdminLoginExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Log off' link equals 'Log off'
        /// </summary>
        public string UILogoffHyperlinkInnerText = "Log off";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMsnInternetExplorerWindow : BrowserWindow
    {
        
        public UIMsnInternetExplorerWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "msn";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("msn");
            this.WindowTitles.Add("Blank Page");
            this.WindowTitles.Add("Log in");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMsnDocument UIMsnDocument
        {
            get
            {
                if ((this.mUIMsnDocument == null))
                {
                    this.mUIMsnDocument = new UIMsnDocument(this);
                }
                return this.mUIMsnDocument;
            }
        }
        
        public UILoginDocument UILoginDocument
        {
            get
            {
                if ((this.mUILoginDocument == null))
                {
                    this.mUILoginDocument = new UILoginDocument(this);
                }
                return this.mUILoginDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMsnDocument mUIMsnDocument;
        
        private UILoginDocument mUILoginDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMsnDocument : HtmlDocument
    {
        
        public UIMsnDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "msn";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.msn.com/?ocid=iehp";
            this.WindowTitles.Add("msn");
            #endregion
        }
        
        #region Properties
        public UIMainCustom UIMainCustom
        {
            get
            {
                if ((this.mUIMainCustom == null))
                {
                    this.mUIMainCustom = new UIMainCustom(this);
                }
                return this.mUIMainCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIMainCustom mUIMainCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIMainCustom : HtmlCustom
    {
        
        public UIMainCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "main";
            this.SearchProperties["Id"] = "main";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"main\" role=\"main\" data-m=\"{\'i\':35,\'n";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("msn");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIScarlettsdaughtermakHyperlink
        {
            get
            {
                if ((this.mUIScarlettsdaughtermakHyperlink == null))
                {
                    this.mUIScarlettsdaughtermakHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIScarlettsdaughtermakHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIScarlettsdaughtermakHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIScarlettsdaughtermakHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIScarlettsdaughtermakHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " \r\nScarlett\'s daughter makes her debut and more celeb news\r\n Wonderwall  ";
                    this.mUIScarlettsdaughtermakHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/en-us/entertainment/celebrity/celebrity-news-for-feb-17-2015/ss-BBhGlSX";
                    this.mUIScarlettsdaughtermakHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIScarlettsdaughtermakHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://www.msn.com/en-us/entertainment/celebrity/celebrity-news-for-feb-17-2015/s" +
                        "s-BBhGlSX";
                    this.mUIScarlettsdaughtermakHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIScarlettsdaughtermakHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/en-us/entertainment/celebrity/cel";
                    this.mUIScarlettsdaughtermakHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "71";
                    this.mUIScarlettsdaughtermakHyperlink.WindowTitles.Add("msn");
                    #endregion
                }
                return this.mUIScarlettsdaughtermakHyperlink;
            }
        }
        
        public HtmlImage UIBruceJennerisdevastaImage
        {
            get
            {
                if ((this.mUIBruceJennerisdevastaImage == null))
                {
                    this.mUIBruceJennerisdevastaImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUIBruceJennerisdevastaImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUIBruceJennerisdevastaImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUIBruceJennerisdevastaImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Bruce Jenner is \'devastated\' following fatal accident";
                    this.mUIBruceJennerisdevastaImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/tenant/amp/entityid/BBhBYAJ.img";
                    this.mUIBruceJennerisdevastaImage.FilterProperties[HtmlImage.PropertyNames.Src] = "http://img.s-msn.com/tenant/amp/entityid/BBhBYAJ.img?h=75&w=100&m=6&q=60&u=t&o=t&" +
                        "l=f&f=jpg&x=810&y=545";
                    this.mUIBruceJennerisdevastaImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/en-us/tv/celebrity/new-video-shows-bruce-jenner-may-be-at-fault-in-fatal-car-cra" +
                        "sh/ar-BBhGZ76";
                    this.mUIBruceJennerisdevastaImage.FilterProperties[HtmlImage.PropertyNames.Href] = "http://www.msn.com/en-us/tv/celebrity/new-video-shows-bruce-jenner-may-be-at-faul" +
                        "t-in-fatal-car-crash/ar-BBhGZ76";
                    this.mUIBruceJennerisdevastaImage.FilterProperties[HtmlImage.PropertyNames.Class] = "image loaded";
                    this.mUIBruceJennerisdevastaImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "width=\"100\" title=\"Mark Von Holden/Invis";
                    this.mUIBruceJennerisdevastaImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "59";
                    this.mUIBruceJennerisdevastaImage.WindowTitles.Add("msn");
                    #endregion
                }
                return this.mUIBruceJennerisdevastaImage;
            }
        }
        
        public HtmlHyperlink UINewvideoshowsBruceJeHyperlink
        {
            get
            {
                if ((this.mUINewvideoshowsBruceJeHyperlink == null))
                {
                    this.mUINewvideoshowsBruceJeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUINewvideoshowsBruceJeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUINewvideoshowsBruceJeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUINewvideoshowsBruceJeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUINewvideoshowsBruceJeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = " \r\nNew video shows Bruce Jenner may be at fault in fatal car crash\r\n Wonderwall  " +
                        "";
                    this.mUINewvideoshowsBruceJeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/en-us/tv/celebrity/new-video-shows-bruce-jenner-may-be-at-fault-in-fatal-car-cra" +
                        "sh/ar-BBhGZ76";
                    this.mUINewvideoshowsBruceJeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUINewvideoshowsBruceJeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://www.msn.com/en-us/tv/celebrity/new-video-shows-bruce-jenner-may-be-at-faul" +
                        "t-in-fatal-car-crash/ar-BBhGZ76";
                    this.mUINewvideoshowsBruceJeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUINewvideoshowsBruceJeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/en-us/tv/celebrity/new-video-show";
                    this.mUINewvideoshowsBruceJeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "70";
                    this.mUINewvideoshowsBruceJeHyperlink.WindowTitles.Add("msn");
                    #endregion
                }
                return this.mUINewvideoshowsBruceJeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIScarlettsdaughtermakHyperlink;
        
        private HtmlImage mUIBruceJennerisdevastaImage;
        
        private HtmlHyperlink mUINewvideoshowsBruceJeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILoginDocument : HtmlDocument
    {
        
        public UILoginDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Log in";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:2129/";
            this.WindowTitles.Add("Log in");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILoginHyperlink
        {
            get
            {
                if ((this.mUILoginHyperlink == null))
                {
                    this.mUILoginHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "loginLink";
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILoginHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log in";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:2129/";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "id=\"loginLink\" href=\"/\"";
                    this.mUILoginHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUILoginHyperlink.WindowTitles.Add("Log in");
                    #endregion
                }
                return this.mUILoginHyperlink;
            }
        }
        
        public HtmlEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "UserName";
                    this.mUIUsernameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "UserName";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "User name";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"UserName\" id=\"UserName\" type=\"text";
                    this.mUIUsernameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIUsernameEdit.WindowTitles.Add("Log in");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" id=\"Password\" type=\"pass";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("Log in");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public UILoginFormCustom UILoginFormCustom
        {
            get
            {
                if ((this.mUILoginFormCustom == null))
                {
                    this.mUILoginFormCustom = new UILoginFormCustom(this);
                }
                return this.mUILoginFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILoginHyperlink;
        
        private HtmlEdit mUIUsernameEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private UILoginFormCustom mUILoginFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILoginFormCustom : HtmlCustom
    {
        
        public UILoginFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "SECTION";
            this.SearchProperties["Id"] = "loginForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"loginForm\"";
            this.FilterProperties["TagInstance"] = "3";
            this.WindowTitles.Add("Log in");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Log in";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "type=\"submit\" value=\"Log in\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "6";
                    this.mUILoginButton.WindowTitles.Add("Log in");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlCustom UITheusernameorpassworCustom
        {
            get
            {
                if ((this.mUITheusernameorpassworCustom == null))
                {
                    this.mUITheusernameorpassworCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUITheusernameorpassworCustom.SearchProperties["TagName"] = "LI";
                    this.mUITheusernameorpassworCustom.SearchProperties["Id"] = null;
                    this.mUITheusernameorpassworCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUITheusernameorpassworCustom.FilterProperties["Class"] = null;
                    this.mUITheusernameorpassworCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUITheusernameorpassworCustom.FilterProperties["InnerText"] = "The user name or password provided is in";
                    this.mUITheusernameorpassworCustom.FilterProperties["TagInstance"] = "1";
                    this.mUITheusernameorpassworCustom.WindowTitles.Add("Log in");
                    #endregion
                }
                return this.mUITheusernameorpassworCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUILoginButton;
        
        private HtmlCustom mUITheusernameorpassworCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIHomePageInternetExplWindow : BrowserWindow
    {
        
        public UIHomePageInternetExplWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePageDocument UIHomePageDocument
        {
            get
            {
                if ((this.mUIHomePageDocument == null))
                {
                    this.mUIHomePageDocument = new UIHomePageDocument(this);
                }
                return this.mUIHomePageDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePageDocument mUIHomePageDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIHomePageDocument : HtmlDocument
    {
        
        public UIHomePageDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Home/Users";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:2129/Home/Users";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public UILogoutFormCustom UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILogoutFormCustom mUILogoutFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILogoutFormCustom : HtmlCustom
    {
        
        public UILogoutFormCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"logoutForm\" action=\"/Account/LogOff\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Home Page");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILogoffHyperlink
        {
            get
            {
                if ((this.mUILogoffHyperlink == null))
                {
                    this.mUILogoffHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log off";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "document.getElementById(\'logoutForm\').submit()";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:document.getElementById(\'logoutForm\').submit()";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:document.getElementById";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUILogoffHyperlink.WindowTitles.Add("Home Page");
                    #endregion
                }
                return this.mUILogoffHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILogoffHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIIndexInternetExploreWindow : BrowserWindow
    {
        
        public UIIndexInternetExploreWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Index";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexDocument UIIndexDocument
        {
            get
            {
                if ((this.mUIIndexDocument == null))
                {
                    this.mUIIndexDocument = new UIIndexDocument(this);
                }
                return this.mUIIndexDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexDocument mUIIndexDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIIndexDocument : HtmlDocument
    {
        
        public UIIndexDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Producer/Index";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:2129/Producer/Index";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public UILogoutFormCustom1 UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom1(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILogoutFormCustom1 mUILogoutFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILogoutFormCustom1 : HtmlCustom
    {
        
        public UILogoutFormCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"logoutForm\" action=\"/Account/LogOff\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILogoffHyperlink
        {
            get
            {
                if ((this.mUILogoffHyperlink == null))
                {
                    this.mUILogoffHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log off";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "document.getElementById(\'logoutForm\').submit()";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:document.getElementById(\'logoutForm\').submit()";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:document.getElementById";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUILogoffHyperlink.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUILogoffHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILogoffHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILoginInternetExploreWindow : BrowserWindow
    {
        
        public UILoginInternetExploreWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log in";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Log in");
            this.WindowTitles.Add("http://localhost:2129/");
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIIndexInternetExploreWindow1 : BrowserWindow
    {
        
        public UIIndexInternetExploreWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Index";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexDocument1 UIIndexDocument
        {
            get
            {
                if ((this.mUIIndexDocument == null))
                {
                    this.mUIIndexDocument = new UIIndexDocument1(this);
                }
                return this.mUIIndexDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexDocument1 mUIIndexDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UIIndexDocument1 : HtmlDocument
    {
        
        public UIIndexDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Clients/Index";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:2129/Clients/Index";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public UILogoutFormCustom2 UILogoutFormCustom
        {
            get
            {
                if ((this.mUILogoutFormCustom == null))
                {
                    this.mUILogoutFormCustom = new UILogoutFormCustom2(this);
                }
                return this.mUILogoutFormCustom;
            }
        }
        #endregion
        
        #region Fields
        private UILogoutFormCustom2 mUILogoutFormCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILogoutFormCustom2 : HtmlCustom
    {
        
        public UILogoutFormCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "FORM";
            this.SearchProperties["Id"] = "logoutForm";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"logoutForm\" action=\"/Account/LogOff\"";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Index");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UILogoffHyperlink
        {
            get
            {
                if ((this.mUILogoffHyperlink == null))
                {
                    this.mUILogoffHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUILogoffHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Log off";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "document.getElementById(\'logoutForm\').submit()";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "javascript:document.getElementById(\'logoutForm\').submit()";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"javascript:document.getElementById";
                    this.mUILogoffHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUILogoffHyperlink.WindowTitles.Add("Index");
                    #endregion
                }
                return this.mUILogoffHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUILogoffHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.30501.0")]
    public class UILoginInternetExploreWindow1 : BrowserWindow
    {
        
        public UILoginInternetExploreWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log in";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Log in");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
}

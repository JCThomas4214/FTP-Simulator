@using Stardome.DomainObjects
﻿@model Stardome.Models.ContentModel
@Scripts.Render("~/Scripts/jsTree")
@Styles.Render("~/Content/jsTree")
@if (Request.IsAuthenticated == false) {
     Response.Redirect("~/Account/Login");

}
@if (Model.RoleId != (int)Enums.Roles.Admin && Model.RoleId != (int)Enums.Roles.Producer && Model.RoleId != (int)Enums.Roles.User)
{
    Response.Redirect("~/Account/Login");
}
@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <hgroup class="title">
                <h1>@ViewBag.Message</h1>
            </hgroup>

        </div>
    </section>
}
<html>
<head>
    <meta charset="utf-8">
    <title>Content</title>         
    <script type="text/javascript">

        var fileList = new Array;
        var htmlList = new Array;

        function check(file) {
            var found = false;
            var items = new Array;
            for (var i = 0; i < htmlList.length; i++) {
                if (htmlList[i] == '<li ondblclick=\"deleteItem(this.id)\" id=\"' + i + '\">' + file + '</li>') {
                    found = true;
                    break;
                }
            }
            items[0] = found;
            items[1] = i;
            return items;
        }

        function aud_play_pause(file) {

            var myAudio = document.getElementById("contentMP3");
            if (myAudio.paused) {
                myAudio.play();
            } else {
                myAudio.pause();
            }

            //var found = false;
            //var items = new Array;
            //for (var i = 0; i < htmlList.length; i++) {
            //    if (htmlList[i] == '<li ondblclick=\"deleteItem(this.id)\" id=\"' + i + '\">' + file + '</li>') {
            //        found = true;
            //        break;
            //    }
            //}
            //items[0] = found;
            //items[1] = i;
            //return items;
        }

        function insertItem(number, file) {
            htmlList.push('<li ondblclick=\"deleteItem(this.id)\" id=\"' + number + '\">' + file + 'xx</li>');
            currentPath = '<label>' + file + '</label>';
            fileList.push(file);
            document.getElementById('selectedFileList').innerHTML = htmlList.join("");
        }
        function deleteItem(number) {
            var tmp = number;
            htmlList.splice(number, 1);
            fileList.splice(number, 1);
            for (var i = number; i < htmlList.length; i++) {
                tmp++;
                htmlList[i] = htmlList[i].replace('id=\"' + tmp + '\"', 'id=\"' + i + '\"');
            }
            document.getElementById('selectedFileList').innerHTML = htmlList.join("");
        }
        $(document).ready(function () {
            $('#MainTree').fileTree({
                root: '@Model.RootPath',
                script: '../Scripts/jqueryFileTree.aspx',
                multiSelect: true,
                multiFolder: false,
                folderEvent: 'dblclick'
            }, function(file) {
                var items;
                items = check(file);
                if (items[0] == true) {
                    deleteItem(items[1]);
                } else {
                    insertItem(items[1], file);
                }
            }, function (dir) {
                debugger;
                if (document.getElementById('lastDir') || document.getElementById('lastSelected')) {
                    document.getElementById('lastDir').innerHTML = "The directory to upload: " + dir;
                    document.getElementById('lastSelected').value = dir;
                }
                
            });
            $('.jqueryFileTree').contextMenu({
                // define which elements trigger this menu
                selector: "li a",
                // define the elements of the menu
                items: {
                    "download": {
                        name: "Download",
                        icon: "edit",
                        callback: function (key, opt) {
                            var items = new Array;
                            items = check($(this).attr('rel'));
                            if (items[0] == true) {
                                deleteItem(items[1]);
                            }
                            else {
                                insertItem(items[1], $(this).attr('rel'));
                            }
                        }
                    },
                    "upload": {
                        name: "Upload",
                        icon: "add",
                        callback: function (key, opt) {
                            var m = "clicked: " + key + " on " + $(this).attr('rel');
                        }
                    },
                    "sep1": "---------",
                    "quit": {
                        name: "Quit",
                        icon: "quit",
                        callback: function (key, opt) {
                        }

                    }
                }
                // there's more, have a look at the demos and docs...
            }, function (action, el, pos) {
                alert(
                    'Action: ' + action + '\n\n' +
                    'Element ID: ' + $(el).attr('id') + '\n\n' +
                    'X: ' + pos.x + '  Y: ' + pos.y + ' (relative to element)\n\n' +
                    'X: ' + pos.docX + '  Y: ' + pos.docY + ' (relative to document)'
                    );
            });
        });

    </script>

</head>
<body> 
    <div><table id="labels">
        <tr>
            <td>Files & Folders</td>
            <td>Files For Download</td>
        </tr>    
    </table></div>
    <div class="outer">
    <div class="innerwrap">
            <div id="MainTree"></div>
        <div id="selectedFileList"></div>
    </div></div>    
  
    @if (Model.RoleId == (int)Enums.Roles.Admin || Model.RoleId == (int)Enums.Roles.Producer)
    {
        using (Html.BeginForm("Actions", "Manage", FormMethod.Post))
         {
             <label id="lastDir"></label>
             <input type="hidden" name="lastSelected" id="lastSelected" value=""/>
             <label for="file">Upload File</label>
             <input type="file" name="files" multiple="multiple" />
             <br>
             <br>
             <input type="submit" value="Upload Selected Files" />
             <br>
             @ViewBag.Message<br>
         }
    }
</body>
</html>  

